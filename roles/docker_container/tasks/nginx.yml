---
# tasks file to start nginx container

- name: copy uploadsize.conf to {{ nextcloud_config_dir }}
  copy:
    src:  'uploadsize.conf'
    dest: '{{ nextcloud_nginx_dir }}/uploadsize.conf'
    owner: '33'
    group: '33'
    mode:  0644

- name: copy nginx.conf
  template:
    src:  'nginx.conf.j2'
    dest: '{{ nextcloud_nginx_dir }}/nginx.conf'
    owner: '33'
    group: '33'
    mode:  0644

- name: "{{ 'Create' if (state is undefined or 'absent' not in state) else 'Terminate' }} the nginx container"
  docker_container:
    name: nginx
    image: nginx:stable
    restart_policy: unless-stopped
    networks:
      - name: backend
    networks_cli_compatible: true
    volumes:
      - "{{ nextcloud_nginx_dir }}/nginx.conf:/etc/nginx/nginx.conf:Z"
      - "{{ nextcloud_nginx_dir }}/uploadsize.conf:/etc/nginx/conf.d/uploadsize.conf:Z"
      - "{{ nextcloud_www_dir }}:/var/www/html:z"
      - "{{ nextcloud_config_dir }}:/var/www/html/config:z"
    labels:
      traefik.enable: "true"
      traefik.http.middlewares.nginx-https.redirectscheme.scheme: "https"
      traefik.http.routers.nginx-http.entrypoints: "web"
      traefik.http.routers.nginx-http.rule: "Host(`{{ nextcloud_server_fqdn }}`)"
      traefik.http.routers.nginx-http.middlewares: "nginx-https@docker"
      traefik.http.routers.nginx.entrypoints: "web-secure"
      traefik.http.routers.nginx.rule: "Host(`{{ nextcloud_server_fqdn }}`)"
      traefik.http.routers.nginx.middlewares: "nginx@docker,nginx-red@docker"
      traefik.http.routers.nginx.tls: "true"
      traefik.http.routers.nginx.tls.certresolver: "default"
      traefik.http.middlewares.nginx.headers.referrerPolicy: "no-referrer"
      traefik.http.middlewares.nginx.headers.SSLRedirect: "true"
      traefik.http.middlewares.nginx.headers.STSSeconds: "315360000"
      traefik.http.middlewares.nginx.headers.browserXSSFilter: "true"
      traefik.http.middlewares.nginx.headers.contentTypeNosniff: "true"
      traefik.http.middlewares.nginx.headers.forceSTSHeader: "true"
      traefik.http.middlewares.nginx.headers.STSIncludeSubdomains: "true"
      traefik.http.middlewares.nginx.headers.STSPreload: "true"
      traefik.http.middlewares.nginx.headers.customFrameOptionsValue: "SAMEORIGIN"
      traefik.http.middlewares.nginx-red.redirectregex.permanent: "true"
      traefik.http.middlewares.nginx-red.redirectregex.regex: "https://(.*)/.well-known/(card|cal)dav"
      traefik.http.middlewares.nginx-red.redirectregex.replacement: "https://$1/remote.php/dav"
      com.centurylinklabs.watchtower.enable:            "true"
    state: "{{ state | default('started') }}"
  register: docker_result
